{"version":3,"sources":["Components/Heading.js","Components/SearchBar.js","Components/Scroll.js","Components/Card.js","Components/CardList.js","Components/Errorboundary.js","Components/NoMoreRobot.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Heading","className","SearchBar","handleChange","placeholder","onChange","type","Scroll","children","style","height","overflowY","border","Card","src","name","email","alt","CardList","robots","map","eachRobot","id","Errorboundary","props","state","hasError","this","setState","Component","NoMoreRobot","margin","App","useState","setRobots","searchField","setSearchField","useEffect","_","fetch","then","resp","json","filteredRobot","filter","toLowerCase","includes","length","evt","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gPASeA,MANf,WACA,OACQ,oBAAIC,UAAU,KAAd,0BCKOC,EARG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,8BACI,uBAAOC,YAAY,gBAAgBC,SAAUF,EAAcG,KAAK,SAASL,UAAU,4CCKhFM,EARA,YAAuB,IAAZC,EAAW,EAAXA,SACtB,OACI,qBAAKC,MAAO,CAACC,OAAO,OAAQC,UAAU,SAAUC,OAAO,mBAAvD,SACCJ,KCSMK,MAZf,YAAkC,IAAnBC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,KAAMC,EAAO,EAAPA,MACtB,OACI,sBAAKf,UAAU,sDAAf,UACI,qBAAKa,IAAKA,EAAKG,IAAI,WACnB,gCACA,6BAAKF,IACL,4BAAIC,WCGDE,MARf,YAEI,OAFwB,EAARC,OAGZC,KAAI,SAAAC,GAAS,OAClB,cAAC,EAAD,CAAyBP,IAAG,+BAA0BO,EAAUC,GAApC,iBAAuDP,KAAMM,EAAUN,KAAMC,MAAOK,EAAUL,OAA/GK,EAAUC,Q,oCCWTC,E,kDAff,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CAACC,UAAS,GAFT,E,qDAKlB,WACAC,KAAKC,SAAS,CAACF,UAAS,M,oBAGrB,WACH,OAAOC,KAAKF,MAAMC,SAAW,uEAC5BC,KAAKH,MAAMhB,a,GAZgBqB,aCDb,SAASC,IACpB,OACA,qBAAK7B,UAAU,mCAAf,SACA,oBAAIQ,MAAO,CAACsB,OAAQ,OAApB,6ECsCWC,MAjCf,WAEE,MAA4BC,mBAAS,IAArC,mBAAOd,EAAP,KAAee,EAAf,KACA,EAAsCD,mBAAS,IAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KAEAC,qBAAW,SAAAC,GAAC,OACVC,MAAM,8CACLC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAArB,GAAM,OAAIe,EAAUf,QACxB,IAEL,IAEMwB,EAAgBxB,EAAOyB,QAAQ,SAAAvB,GAAS,OAC7CA,EAAUN,KAAK8B,cAAcC,SAASX,EAAYU,kBAEpD,OACC1B,EAAO4B,OAEN,sBAAK9C,UAAU,KAAf,UACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAWE,aAVS,SAAA6C,GAAG,OAAIZ,EAAeY,EAAIC,OAAOC,UAWrD,cAAC,EAAD,UACA,cAAC,EAAD,UACCP,EAAcI,OAA0B,cAAC,EAAD,CAAU5B,OAAQwB,IAAnC,cAACb,EAAD,WAPT,0CCdFqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.774b1e6a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './heading.css';\r\n\r\nfunction Heading(){\r\nreturn (\r\n        <h1 className='f2' >ROBOFRIENDS</h1>\r\n)\r\n}\r\n\r\nexport default Heading;","import React  from 'react';\r\n\r\nconst SearchBar = ({handleChange}) => {\r\n    return (\r\n        <div>\r\n            <input placeholder='Search robots' onChange={handleChange} type='search' className='ma2 pa2 ba b--green bg-lightest-blue' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\nconst Scroll = function ({children}) {\r\n    return (\r\n        <div style={{height:'75vh', overflowY:'scroll', border:'3px solid black'}}>\r\n        {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nfunction Card({src, name, email}){\r\n    return (\r\n        <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\r\n            <img src={src} alt='robots'/>\r\n            <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n} \r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nfunction CardList ({robots}){\r\n //if(1){throw new Error('fuck')}\r\n    return (\r\n robots.map(eachRobot => \r\n   <Card key={eachRobot.id} src={`https://robohash.org/${eachRobot.id}?size=200x200`} name={eachRobot.name} email={eachRobot.email}/>)\r\n   )\r\n     }\r\n\r\nexport default CardList;","import { Component } from 'react';\r\n\r\nclass Errorboundary extends Component{\r\nconstructor(props){\r\n    super(props);\r\n    this.state = {hasError:false}\r\n   }\r\n\r\ncomponentDidCatch(){\r\nthis.setState({hasError:true});\r\n}\r\n\r\n   render(){\r\nreturn this.state.hasError ? <h1>Something went wrong, Try again Later</h1> :\r\n this.props.children;\r\n   }\r\n}\r\n\r\nexport default Errorboundary;","\r\nexport default function NoMoreRobot(){\r\n    return (\r\n    <div className='flex items-center justify-center'>\r\n    <h1 style={{margin: '20%'}}> \r\n    There's no robot with the name you type,\r\n    Pls try another name \r\n    </h1>\r\n    </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\nimport Heading from '../Components/Heading';\nimport SearchBar from '../Components/SearchBar';\nimport Scroll from '../Components/Scroll';\nimport CardList from '../Components/CardList';\nimport './App.css';\nimport Errorboundary from '../Components/Errorboundary';\nimport NoMoreRobot from '../Components/NoMoreRobot';\n\nfunction App(){\n\n  const [robots, setRobots] = useState([]);\n  const [searchField, setSearchField] = useState('');\n\n  useEffect( _ => \n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(resp => resp.json())\n    .then(robots => setRobots(robots))\n    , []);\n\n const handleChange = evt => setSearchField(evt.target.value);\n\n const filteredRobot = robots.filter( eachRobot => \n  eachRobot.name.toLowerCase().includes(searchField.toLowerCase()));\n\nreturn(      \n!robots.length ? <h1>Loading</h1> :\n        ( \n  <div className='tc'>\n  <Heading/>\n  <SearchBar handleChange={handleChange}/>\n  <Errorboundary>\n  <Scroll>\n {!filteredRobot.length ? <NoMoreRobot/> : <CardList robots={filteredRobot}/>}\n  </Scroll>\n  </Errorboundary>\n  </div>\n       )\n)\n\n }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}